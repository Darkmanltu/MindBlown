@namespace MindBlown.Layout.Modal
{
    @code {
        [Parameter] public bool IsVisible { get; set; }
        [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
        [Parameter] public RenderFragment? ChildContent { get; set; }

        private string ModalClass => IsVisible ? "modal display-block" : "modal display-none";

        private async Task CloseModal()
        {
            // Close the modal when the overlay or close button is clicked
            await IsVisibleChanged.InvokeAsync(false);
        }
    }

    <link rel="stylesheet" href="css/modal.css" />

    <div class="@ModalClass" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation>
            <span class="close-button" @onclick="CloseModal">&times;</span>
            @ChildContent
        </div>
    </div>

}