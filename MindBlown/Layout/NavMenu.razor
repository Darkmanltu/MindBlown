@using MindBlown.Interfaces

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MindBlown</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if(isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="addMnemonic">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Mnemonics setup
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="testMnemonic">
                    <span class="nav-icon fa-solid fa-brain" aria-hidden="true"></span>  Mnemonics game
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [Inject]
    public required IAuthService AuthService { get; set; }
    private bool collapseNavMenu = true;

    public bool isLoggedIn = false;
    private Timer? _timer;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        // Check if the user is logged in
        isLoggedIn = await AuthService.IsUserLoggedInAsync();

        _timer = new Timer(async async =>
            {
                var oldLog = isLoggedIn;
                isLoggedIn = await AuthService.IsUserLoggedInAsync();
                if (oldLog != isLoggedIn)
                {
                    StateHasChanged();
                }
            }, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
    }

    public void Dispose()
    {
        // Disposing timer for checking whether active user count updated
        _timer?.Dispose(); 
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
