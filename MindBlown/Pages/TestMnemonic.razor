@page "/testMnemonic"


@using static MindBlown.Types.AnsweringStatsStruct
@using static MindBlown.Types.LastWrongAnswerRecord
@using static MindBlown.Pages.Mnemonics
@using static StringExtensions
@using System.Text.Json
@inject HttpClient HttpClient
@* @inject MnemonicService MnemonicService *@
@* @inject LWARecordService LWARecordService *@
@* @inject AuthService AuthService *@
@* @inject IJSRuntime JS *@
@using Services

<link rel="stylesheet" href="css/TestMnemonic.css" />

<div style="display: flex;"> 
<div class="blinking-green">
</div>
<div class="active-user-count">    
    <p>Active Users: @ActiveUserCount</p>
</div>
</div>




<div class="mnemonics-container">
    <h1>@("test your mnemonics".CapitalizeWords())</h1>
    <h4>A place to test your created mnemonics</h4>

    @if (mnemonicsList.Count() != 0)
    {
        @if (testingMnemonic != null)
        {
            <div class="mnemonic-status">
                <div class="mnemonic-display">Mnemonic: <span>@testingMnemonic.HelperText</span></div>
                <div class="mnemonic-display">Category: <span>@testingMnemonic.Category</span></div>
            </div>

            <div class="input-container">
                 <form @onsubmit="CheckMnemonic">
                    <input type="text" id="userGivenMnemonicText" name="userGivenMnemonicText" 
               placeholder="Enter mnemonic..." 
               @bind="userGivenMnemonicText" maxlength="256" required class="input-text" />
                <br />
                    <button type="submit">Check</button>
                </form>
            </div>
        }
        else
        {
            <div class="mnemonic-status">
                <div class="loading-message">Mnemonic is loading...</div>
            </div>
        }
    }
    else
    {
        <div class="mnemonic-status">
            No mnemonics to test
        </div>
    }
    <br />

    @if (answeringStats.allAnswerCount != 0)
    {
        <div class="stats-results">
            Your result: <strong>@(Math.Round(((double)answeringStats.correctAnswerCount / answeringStats.allAnswerCount) *
            100, answeringStats.precision)) %</strong>
        </div>
    }

    @if (lastWrongAnswer != null)
    {
        <br />
        <div class="wrong-answer-container">
            <h4>@("last wrong answer".CapitalizeWords())</h4>
            <div><strong>@("mnemonic".CapitalizeWords()):</strong> @lastWrongAnswer.helperText</div>
            <div><strong>@("full mnemonic".CapitalizeWords()):</strong> @lastWrongAnswer.mnemonicText</div>
            <div><strong>@("wrongly answered".CapitalizeWords()):</strong> @lastWrongAnswer.wrongTextMnemonic</div>
            <div><strong>@("category".CapitalizeWords()):</strong> @lastWrongAnswer.category</div>
        </div>
    }
    <button @onclick="ToggleDropdown">View Past Sessions</button>

    @if (isDropdownVisible)
    {
        <div class="dropdown-list">
            @if (displayingStat == null || !displayingStat.Any())
            {
                <p>No past sessions found.</p>
            }
            else
            {
                <ul>
                    @foreach (var session in displayingStat)
                    {
                        <li> @session.UserName  - @session.LastAnswerTime - @session.CorrectCount correct answers. Accuracy:  <strong>@(Math.Round(((double)session.CorrectCount / (session.CorrectCount + session.IncorrectCount)) *
            100, answeringStats.precision)) %</strong></li>
                    }
                </ul>
            }
        </div>
    }
</div>
