// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MindBlown.Server.Data;

#nullable disable

namespace MindBlown.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MindBlown.Server.Models.AnswerSession", b =>
                {
                    b.Property<Guid>("AnswerSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("int");

                    b.Property<int>("IncorrectCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAnswerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerSessionId");

                    b.ToTable("AnswerSessions");
                });

            modelBuilder.Entity("MindBlown.Server.Models.AnsweredMnemonic", b =>
                {
                    b.Property<Guid>("AnsweredMnemonicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnswerSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<Guid>("MnemonicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnsweredMnemonicId");

                    b.HasIndex("AnswerSessionId");

                    b.ToTable("AnsweredMnemonics");
                });

            modelBuilder.Entity("MindBlown.Server.Models.LastWrongAnswerRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("category")
                        .HasColumnType("int");

                    b.Property<string>("helperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mnemonicText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wrongTextMnemonic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("MindBlown.Server.Models.Mnemonic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("HelperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MnemonicText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mnemonics");
                });

            modelBuilder.Entity("MindBlown.Server.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("ActiveUserSession");
                });

            modelBuilder.Entity("MindBlown.Server.Models.UserMnemonicIDs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LWARecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MnemonicGuids")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserWithMnemonicsIDs");
                });

            modelBuilder.Entity("MindBlown.Server.Models.AnsweredMnemonic", b =>
                {
                    b.HasOne("MindBlown.Server.Models.AnswerSession", "AnswerSession")
                        .WithMany("AnsweredMnemonics")
                        .HasForeignKey("AnswerSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerSession");
                });

            modelBuilder.Entity("MindBlown.Server.Models.AnswerSession", b =>
                {
                    b.Navigation("AnsweredMnemonics");
                });
#pragma warning restore 612, 618
        }
    }
}
